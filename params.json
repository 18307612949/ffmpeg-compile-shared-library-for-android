{"name":"Ffmpeg for android shared library","tagline":"移植ffmpeg到android，编译可用于jni调用的so库.","body":"# ffmpeg for android shared library\r\n  移植ffmpeg到android，编译可用于jni调用的so库.<br>\r\n  编译出的so在android apk中的使用参考我的另一个项目[ffmpeg-jni-sample](https://github.com/dxjia/ffmpeg-jni-sample)\r\n\r\n# 环境\r\n  ubuntu 12.04LTS x86_64<br>\r\n  android-ndk64-r10-linux-x86_64<br>\r\n  ffmpeg 2.6.2<br>\r\n  我是在ubuntu下进行移植的，windows下应该也可以，没有尝试过。\r\n\r\n# 获取代码\r\n```\r\n  git clone git@github.com:dxjia/ffmpeg-for-android-shared-library.git\r\n```\r\n\r\n# 使用\r\n##Step 1\r\n安装android linux NDK以及SDK，并配置环境变量；<br>\r\n从[ffmpeg官网](http://ffmpeg.org/)下载ffmpeg源码包;<br>\r\n##Step 2\r\n修改build_android.sh中的 TMPDIR、NDK、SYSROOT、TOOLCHAIN、PREFIX变量为自己的具体情况，具体如下：<br>\r\n#####1.指定零时目录\r\n```\r\nexport TMPDIR=/home/djia/tmpdir\r\n```\r\n必须要有，ffmpeg编译要用；<br>\r\n#####2.指定NDK路径\r\n```\r\nNDK=/home/djia/android/android-ndk-r10\r\n```\r\n#####3.指定使用NDK Platform版本\r\n```\r\nSYSROOT=$NDK/platforms/android-16/arch-arm/\r\n```\r\n这里指定的ndk platform的路径，一定要`选择比你的目标机器使用的版本低的`，比如你的手机是android-15版本，那么就选择低于15的<br>\r\n#####4.指定编译工具链\r\n```\r\nTOOLCHAIN=/home/djia/android/android-ndk-r10/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64\r\n```\r\n#####5.指定编译后的安装目录\r\n```\r\nPREFIX=/root/workspace/ffmpeg_shared_compile/dxjia_ffmpeg_install\r\n```\r\n这个目录是ffmpeg编译后的so的输出目录，会有一个include和lib文件夹生成在这里，这也是我们之后要在android apk中使用的.<br>\r\n<br>\r\n#####build_android.sh示例\r\n可以修改该文件来控制ffmpeg的编译config来达到自己想要的库文件，我这里为了得到动态链接库，--enable-shared，并--disable-static，我开放了所有的编解码器，如果有不需要的，可以通过--disable-coder和--disable-decoder来指定，具体查看ffmpeg文档.\r\n\r\n\r\n```java\r\n#!/bin/bash\r\nexport TMPDIR=/home/djia/tmpdir\r\nNDK=/home/djia/android/android-ndk-r10\r\nSYSROOT=$NDK/platforms/android-16/arch-arm/\r\nTOOLCHAIN=/home/djia/android/android-ndk-r10/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64\r\nfunction build_one\r\n{\r\n./configure \\\r\n--prefix=$PREFIX \\\r\n--enable-shared \\\r\n--disable-static \\\r\n--disable-doc \\\r\n--disable-ffmpeg \\\r\n--disable-ffplay \\\r\n--disable-ffprobe \\\r\n--disable-ffserver \\\r\n--disable-doc \\\r\n--disable-symver \\\r\n--enable-small \\\r\n--cross-prefix=$TOOLCHAIN/bin/arm-linux-androideabi- \\\r\n--target-os=linux \\\r\n--arch=arm \\\r\n--enable-cross-compile \\\r\n--sysroot=$SYSROOT \\\r\n--extra-cflags=\"-Os -fpic $ADDI_CFLAGS\" \\\r\n--extra-ldflags=\"$ADDI_LDFLAGS\" \\\r\n$ADDITIONAL_CONFIGURE_FLAG\r\nmake clean\r\nmake\r\nmake install\r\n}\r\nCPU=arm\r\nPREFIX=/root/workspace/ffmpeg_shared_compile/dxjia_ffmpeg_install\r\nADDI_CFLAGS=\"-marm\"\r\nbuild_one\r\n```\r\n##Step 3\r\n```\r\ncd source/ffmpeg\r\n./build_andrioid.sh\r\n```\r\n\r\n##Step 4\r\n等待一段时间后，会在 $PREFIX 目录下生成 include和lib两个文件夹，将lib文件夹中的 pkgconfig 目录和so的链接文件删除，只保留so文件，然后将include 和lib两个目录一起copy到你的apk jni下去编译，具体请参考我的另外一个项目[ffmpeg-jni-sample](https://github.com/dxjia/ffmpeg-jni-sample)\r\n\r\n# Reference & Thanks\r\n  [android-ffmpeg-tutorial](https://github.com/roman10/android-ffmpeg-tutorial)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}